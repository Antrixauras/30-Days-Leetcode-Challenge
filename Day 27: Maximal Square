Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Example:

Input: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

Output: 4

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int n=matrix.size();
        if(n==0)
            return 0;
        int m=matrix[0].size();
        int maxside=0;
        int i,j;
        vector<vector<int>> v(n+1,vector<int>(m+1));
        for(i=0;i<n+1;i++)
            v[i][0]=0;
        for(j=0;j<m+1;j++)
            v[0][j]=0;
        for(i=1;i<n+1;i++)
            for(j=1;j<m+1;j++)
            {
                if(matrix[i-1][j-1]=='1')
                {
                    v[i][j]=1+min(v[i-1][j],min(v[i-1][j-1],v[i][j-1]));
                    if(v[i][j]>maxside)
                        maxside=v[i][j];
                }
            }
        return maxside*maxside;

    }
};
